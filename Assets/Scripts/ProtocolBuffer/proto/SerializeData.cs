// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: SerializeData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace protobuf {

  /// <summary>Holder for reflection information generated from SerializeData.proto</summary>
  public static partial class SerializeDataReflection {

    #region Descriptor
    /// <summary>File descriptor for SerializeData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SerializeDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNTZXJpYWxpemVEYXRhLnByb3RvEghwcm90b2J1ZiLSAQoNU2VyaWFsaXpl",
            "RGF0YRIPCgd0ZXN0TnVtGAEgASgFEhEKCXRlc3RGbG9hdBgCIAEoAhISCgp0",
            "ZXN0U3RyaW5nGAMgASgJEhAKCHRlc3RCb29sGAQgASgIEhAKCHRlc3RMaXN0",
            "GAUgAygJEjUKB3Rlc3REaWMYBiADKAsyJC5wcm90b2J1Zi5TZXJpYWxpemVE",
            "YXRhLlRlc3REaWNFbnRyeRouCgxUZXN0RGljRW50cnkSCwoDa2V5GAEgASgF",
            "Eg0KBXZhbHVlGAIgASgJOgI4AUILqgIIcHJvdG9idWZiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::protobuf.SerializeData), global::protobuf.SerializeData.Parser, new[]{ "TestNum", "TestFloat", "TestString", "TestBool", "TestList", "TestDic" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SerializeData : pb::IMessage<SerializeData> {
    private static readonly pb::MessageParser<SerializeData> _parser = new pb::MessageParser<SerializeData>(() => new SerializeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SerializeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::protobuf.SerializeDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeData(SerializeData other) : this() {
      testNum_ = other.testNum_;
      testFloat_ = other.testFloat_;
      testString_ = other.testString_;
      testBool_ = other.testBool_;
      testList_ = other.testList_.Clone();
      testDic_ = other.testDic_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SerializeData Clone() {
      return new SerializeData(this);
    }

    /// <summary>Field number for the "testNum" field.</summary>
    public const int TestNumFieldNumber = 1;
    private int testNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TestNum {
      get { return testNum_; }
      set {
        testNum_ = value;
      }
    }

    /// <summary>Field number for the "testFloat" field.</summary>
    public const int TestFloatFieldNumber = 2;
    private float testFloat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float TestFloat {
      get { return testFloat_; }
      set {
        testFloat_ = value;
      }
    }

    /// <summary>Field number for the "testString" field.</summary>
    public const int TestStringFieldNumber = 3;
    private string testString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TestString {
      get { return testString_; }
      set {
        testString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "testBool" field.</summary>
    public const int TestBoolFieldNumber = 4;
    private bool testBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TestBool {
      get { return testBool_; }
      set {
        testBool_ = value;
      }
    }

    /// <summary>Field number for the "testList" field.</summary>
    public const int TestListFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_testList_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> testList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TestList {
      get { return testList_; }
    }

    /// <summary>Field number for the "testDic" field.</summary>
    public const int TestDicFieldNumber = 6;
    private static readonly pbc::MapField<int, string>.Codec _map_testDic_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<int, string> testDic_ = new pbc::MapField<int, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> TestDic {
      get { return testDic_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SerializeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SerializeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TestNum != other.TestNum) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TestFloat, other.TestFloat)) return false;
      if (TestString != other.TestString) return false;
      if (TestBool != other.TestBool) return false;
      if(!testList_.Equals(other.testList_)) return false;
      if (!TestDic.Equals(other.TestDic)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TestNum != 0) hash ^= TestNum.GetHashCode();
      if (TestFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TestFloat);
      if (TestString.Length != 0) hash ^= TestString.GetHashCode();
      if (TestBool != false) hash ^= TestBool.GetHashCode();
      hash ^= testList_.GetHashCode();
      hash ^= TestDic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TestNum != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TestNum);
      }
      if (TestFloat != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(TestFloat);
      }
      if (TestString.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TestString);
      }
      if (TestBool != false) {
        output.WriteRawTag(32);
        output.WriteBool(TestBool);
      }
      testList_.WriteTo(output, _repeated_testList_codec);
      testDic_.WriteTo(output, _map_testDic_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TestNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TestNum);
      }
      if (TestFloat != 0F) {
        size += 1 + 4;
      }
      if (TestString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestString);
      }
      if (TestBool != false) {
        size += 1 + 1;
      }
      size += testList_.CalculateSize(_repeated_testList_codec);
      size += testDic_.CalculateSize(_map_testDic_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SerializeData other) {
      if (other == null) {
        return;
      }
      if (other.TestNum != 0) {
        TestNum = other.TestNum;
      }
      if (other.TestFloat != 0F) {
        TestFloat = other.TestFloat;
      }
      if (other.TestString.Length != 0) {
        TestString = other.TestString;
      }
      if (other.TestBool != false) {
        TestBool = other.TestBool;
      }
      testList_.Add(other.testList_);
      testDic_.Add(other.testDic_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TestNum = input.ReadInt32();
            break;
          }
          case 21: {
            TestFloat = input.ReadFloat();
            break;
          }
          case 26: {
            TestString = input.ReadString();
            break;
          }
          case 32: {
            TestBool = input.ReadBool();
            break;
          }
          case 42: {
            testList_.AddEntriesFrom(input, _repeated_testList_codec);
            break;
          }
          case 50: {
            testDic_.AddEntriesFrom(input, _map_testDic_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
